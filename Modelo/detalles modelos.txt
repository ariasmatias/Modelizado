vehiculos:
todo default

vehiculos_con_weights:
class_weights = {
    0: 0.8,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.0,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.0,   # Hovercraft
    9: 0.8,   # Jet Ski
    10: 1.0,  # Kayak
    11: 0.8,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Skateboard
    16: 1.0,  # Tractor
    17: 1.0,  # Truck
    18: 1.0   # Unicycle
}


vehiculos_con_weights_learning_rate0005:
class_weights = {
    0: 0.8,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.0,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.0,   # Hovercraft
    9: 0.8,   # Jet Ski
    10: 1.0,  # Kayak
    11: 0.8,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Skateboard
    16: 1.0,  # Tractor
    17: 1.0,  # Truck
    18: 1.0   # Unicycle
}
low_lr = 0.0005

vehiculos_con_weights_learning_rate0005_final(no_final):
class_weights = {
    0: 0.8,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.0,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.0,   # Hovercraft
    9: 0.8,   # Jet Ski
    10: 1.0,  # Kayak
    11: 0.8,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Skateboard
    16: 1.0,  # Tractor
    17: 1.3,  # Truck
    18: 1.0   # Unicycle
}
low_lr = 0.0005

vehiculos_opening_latino(HD):
class_weights = {
    0: 0.8,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.0,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.0,   # Hovercraft
    9: 0.8,   # Jet Ski
    10: 1.0,  # Kayak
    11: 0.8,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Skateboard
    16: 1.0,  # Tractor
    17: 1.0,  # Truck
    18: 1.0   # Unicycle
}
low_lr = 0.0005
#se limpiaron las carpetas de val y test de truck, y se agregaron 'mejores' imagenes
#interrumpida en epoca 14


vehiculos_vehiculos:

igual a opening latino, pero con 7 epocas fijas


vehiculos_vehiculos_wow:
igual a vehiculos_vehiculos +

model = models.Sequential([
    base_model,
    layers.GlobalAveragePooling2D(),
    layers.Dropout(0.4), #nuevo
    layers.Dense(1024, activation='relu'),
    layers.Dropout(0.7), # nuevo
    layers.Dense(train_generator.num_classes, activation='softmax')
])



vehiculos_shrigma:
epocas = 8
model = models.Sequential([
    base_model,
    layers.GlobalAveragePooling2D(),
    layers.Dropout(0.4),
    layers.Dense(1024, activation='sigmoid'), # antes era relu
    layers.Dropout(0.5),
    layers.Dense(train_generator.num_classes, activation='softmax')
])


vehiculos_9:
epocas = 7
class_weights = {
    0: 0.8,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.0,   # Bicycle
    3: 1.1,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 0.9,   # Hovercraft
    9: 0.8,   # Jet Ski
    10: 1.0,  # Kayak
    11: 0.8,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    16: 1.0,  # Tractor
    17: 1.0,  # Truck
    18: 1.0   # Unicycle
}
model = models.Sequential([
    base_model,
    layers.GlobalAveragePooling2D(),
    layers.Dense(1024, activation='relu'),
    layers.Dropout(0.5),
    layers.Dense(train_generator.num_classes, activation='softmax')
])
limpieza significativa en los datos de scooter


vehiculos_10:
epocas = 7
limpieza en datos de moto, bote, y kayak
nueva clase: tren
todos los pesos en 1
lerning rate = 0.0005
model = models.Sequential([
    base_model,
    layers.GlobalAveragePooling2D(),
    layers.Dense(1024, activation='relu'),
    layers.Dropout(0.5),
    layers.Dense(train_generator.num_classes, activation='softmax')
])

vehiculos 11:
# Reduce learning rate if the validation loss doesn't improve for 2 epochs
reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=2, min_lr=1e-6, verbose=1)
early_stopping = EarlyStopping(monitor='val_loss', patience=3, restore_best_weights=True)

callbacks=[early_stopping, reduce_lr])
ultima epoca: 13

vehiculos 13:
agregar mas imagenes de aviones
limpieza de jet ski 
4 epocas con learning rate 0.0005, 3 m√°s con learning rate de 0.0001

vehiculos 14:
reforzar uniciclo
nueva categoria: ship
10 epocas: primeras 4 con lr de 0.0005, 3 con lr de 0.0001, 3 con lr de 0.00005


vehiculos 15
class_weights = {
    0: 1.0,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.1,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.2,   # Hovercraft
    9: 1.0,   # Jet Ski
    10: 1.0,  # Kayak
    11: 1.0,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Ship
    16: 1.0,  # Skateboard
    17: 1.0,  # Tractor
    18: 1.0,  # Train
    19: 1.0,  # Truck
    20: 1.0,  # Unicycle
    21: 1.0   # Van
}
reforzar hovercraft y un poco bicicletas
8 epocas: primeras 4 con lr de 0.0005, 2 con lr de 0.0001, 2 con lr de 0.00005

vehiculos 16
class_weights = {
    0: 1.0,   # Airplane
    1: 1.0,   # Ambulance
    2: 1.1,   # Bicycle
    3: 1.0,   # Boat
    4: 1.0,   # Bus
    5: 1.0,   # Car
    6: 1.0,   # Fire Truck
    7: 1.0,   # Helicopter
    8: 1.1,   # Hovercraft
    9: 1.0,   # Jet Ski
    10: 1.0,  # Kayak
    11: 1.0,  # Motorcycle
    12: 1.0,  # Rickshaw
    13: 1.0,  # Scooter
    14: 1.0,  # Segway
    15: 1.0,  # Ship
    16: 1.0,  # Skateboard
    17: 1.0,  # Tractor
    18: 1.0,  # Train
    19: 1.0,  # Truck
    20: 1.0,  # Unicycle
    21: 1.0   # Van
}

9 epocas: primeras 5 con lr de 0.0005, 2 con lr de 0.0001, 2 con lr de 0.00005

